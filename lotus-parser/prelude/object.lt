export class Object {
    autogen static __new() -> This {
        let data = @alloc(#FIELD_COUNT + 1);

        data[0] = #TYPE_ID;

        return data as This;
    }

    autogen static __default() -> This {
        let obj = This.__new();

        iter_fields {
            obj.#FIELD_NAME = #FIELD_DEFAULT_EXPRESSION;
        }

        return obj;
    }

    autogen static __none() -> This {{
        (i32.const 0)
    }}

    eq(other: This) -> bool {{
        i32.eq
    }}

    ne(other: This) -> bool {{
        i32.ne
    }}

    __is_none() -> bool {{
        (i32.eqz)
    }}

    __hash() -> int {
        return (this as int).__hash();
    }

    autogen dyn to_string() -> string {
        return "[" + #TYPE_NAME + " " + (this as ptr).to_debug_string() + "]";
    }

    autogen dyn to_debug_string() -> string {
        return this.to_string();
    }
}