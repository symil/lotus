export type(void) system {
    alloc(block_size: int) -> ptr {
        return mem_alloc(block_size);
    }

    free(pointer: ptr) {
        mem_free(pointer);
    }

    retain<T>(value: T) {
        value.__retain();
    }

    collect_garbage() {
        mem_trigger_garbage_collection();
    }

    log<T>(value: T) {
        let str = value.to_string();

        log_string(str);
    }

    dbg<T>(value: T) {
        let set = Set<ptr>.new();
        let str = value.to_debug_string(set);

        log_string(str);
    }

    log_empty() {{
        (call $log_empty)
    }}
}

fn log_string(string) {{
    (call $log_string)
}}