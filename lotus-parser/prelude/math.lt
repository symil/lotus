sys fn __int_log2(n: int) -> int {
    if n < 2 {
        return 1;
    } else {
        return 32 - (n - 1).clz();
    }
}

sys fn __int_log4(n: int) -> int {
    if n < 4 {
        return 1;
    } else {
        return (33 - (n - 1).clz()) / 2;
    }
}

sys fn __int_pow(value: int, exponent: int) -> int {
    let i = 0;
    let result = 1;

    while exponent > 0 {
        result = result * value;
        exponent = exponent - 1;
    }

    return result;
}

sys fn __int_next_power_of_2(n: int) -> int {
    return 1 << n.log2();
}

sys fn __int_next_power_of_4(n: int) -> int {
    return 1 << (n.log4() * 2);
}