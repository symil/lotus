export type ptr = Pointer<int>;

export type(i32) Pointer<T> {
    type Item = T;

    set_at(index: int, value: T) {
        let byte_index = ((this as int) + index) * 4;

        wasm_store(byte_index, value);
    }

    get_at(index: int) -> T {
        let byte_index = ((this as int) + index) * 4;

        return wasm_load(byte_index);
    }

    is_null() -> bool {{
        i32.eqz
    }}

    static null() -> This {{
        (i32.const 0)
    }}
}

