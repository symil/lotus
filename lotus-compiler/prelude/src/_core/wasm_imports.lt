pub fn wasm_assert(line_number: int, success: bool) [
    import utils.assert
]

pub fn wasm_call_float_to_string(value: float, result_buffer: ptr) [
    import utils.float_to_string
]

pub fn wasm_log_string(value: string) [
    import env.log
]

pub fn wasm_log_int(value: int) [
    import env.log_int
]

pub fn wasm_get_current_time() -> int [
    import env.get_current_time
]

pub fn wasm_init_window(aspect_ratio: float) [
    import env.init_window
]

pub fn wasm_get_window_width() -> float [
    import env.get_window_width
]

pub fn wasm_get_window_height() -> float [
    import env.get_window_height
]

pub fn wasm_set_window_title(title: string) [
    import env.set_window_title
]

pub fn wasm_poll_window_events(buffer_addr: ptr, buffer_capacity: int) -> int [
    import env.poll_window_events
]

pub fn wasm_draw_frame(buffer_addr: ptr, buffer_size: int) [
    import env.draw_frame
]

pub fn wasm_clear_renderer_cache() [
    import env.clear_renderer_cache
]

pub fn wasm_create_websocket() -> int [
    import env.create_websocket
]

pub fn wasm_create_websocket_server() -> int [
    import env.create_websocket_server
]

pub fn wasm_get_websocket_state(websocket_id: int) -> int [
    import env.get_websocket_state
]

pub fn wasm_send_message(websocket_id: int, buffer_addr: ptr, buffer_size:int) [
    import env.send_message
]

pub fn wasm_poll_network_events(buffer_addr: ptr, buffer_capacity: int) -> int [
    import env.poll_network_events
]

pub fn wasm_write_file(file_path: string, buffer_addr: ptr, buffer_size: int) [
    import env.write_file
]

pub fn wasm_read_file(file_path: string, buffer_addr: ptr, buffer_capacity: int) -> int [
    import env.read_file
]

pub fn wasm_set_local_storage_item(key: string, buffer_addr: ptr, buffer_size: int) [
    import env.set_local_storage_item
]

pub fn wasm_remove_local_storage_item(key: string) [
    import env.remove_local_storage_item
]

pub fn wasm_get_local_storage_item(key: string, buffer_addr: ptr, buffer_capacity: int) -> int [
    import env.get_local_storage_item
]

pub fn wasm_clear_local_storage() -> int [
    import env.clear_local_storage
]

pub fn wasm_process_exit(code: int) [
    import env.process_exit
]

pub fn wasm_prompt(message: string, buffer: Buffer) [
    import env.prompt
]

pub fn wasm_get_key_value(key: KeyCode, buffer: Buffer) [
    import env.get_key_value
]

pub fn wasm_trace(message: string) [
    import env.trace
]

pub fn wasm_get_href(buffer: Buffer) [
    import env.get_href
]

pub fn wasm_get_hostname(buffer: Buffer) [
    import env.get_hostname
]

pub fn wasm_get_protocol(buffer: Buffer) [
    import env.get_protocol
]