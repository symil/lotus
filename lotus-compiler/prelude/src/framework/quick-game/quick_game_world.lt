export class QuickGameWorld {
    users: Map<string, QuickGameUser> = Map::new(),
    matchmaking_queue: QuickGameUser[] = [],
    game_items: GameItemCategory[] = [],
    valid_game_items: Map<Object, GameItemCategory> = Map::new(),

    @OnWorldOpen {
        for category in self.game_items {
            for item in category.items {
                self.valid_game_items.set(item, category);
            }
        }
    }

    @OnUserConnect {
        for category in self.game_items {
            evt.user.selected_game_items.set(category, []);
        }
    }

    @OnUserDisconnect {
        check evt.user.name;

        self.users.delete(evt.user.name);
    }

    @OnUserRequest {
        evt.emit([evt.request])
    }

    add_to_matchmaking(user: QuickGameUser) {
        user.is_searching_for_game = true;
        self.matchmaking_queue.push_unique(user);
    }

    remove_from_matchmaking(user: QuickGameUser) {
        user.is_searching_for_game = false;
        self.matchmaking_queue.remove(user);
    }
}