export view QuickGameWindow {
    background_color : Color = Color::white(),
    title: string = "Game",
    title_color : Color = Color::black(),
    text_font: Font = DEFAULT_FONT,

    @OnRender {
        let lobby_screen = LobbyScreen { ..self };
        let modals = evt.user.messages.map(message => Modal {
            kind: message.kind,
            content: message.content,
            buttons: [ModalButton {
                content: "Ok",
                on_click: (client) => client.send_request(AcknowledgeRequest { message })
            }]
        });

        self.layout()
            .push(lobby_screen)
            .scale(0.35)
            .move_center()
            .use_fixed_positionning()
            .push_list(modals)
        
        // self.add_child(TestImage.set_rect(Rect::new(250, 500, 300, 300)));
    }

    @OnClientStart {
        evt.client.set_local_storage_key_prefix(self.title + ":");

        let local_storage_username : string = evt.client.get_local_storage_item(USERNAME_LOCAL_STORAGE_KEY);

        if !local_storage_username.is_empty() {
            evt.client.freeze();
            evt.client.send_request(LoginRequest {
                username: local_storage_username
            }, () => evt.client.unfreeze());
        }
    }

    @OnKeyboardEvent[-1] {
        check evt.action == KeyboardAction::Down && evt.code == KeyCode::KeyC && evt.alt_key;

        evt.client.clear_local_storage();
    }
}