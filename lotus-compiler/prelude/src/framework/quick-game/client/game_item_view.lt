pub view GameItemSelectionIcon {
    icon: View,
    category: GameItemCategory,
    item: Object,

    _is_selected(user: QuickGameUser) -> bool {
        user.selected_game_items.get(self.category).includes(self.item)
    }

    @OnRender {
        let is_selected = self._is_selected(evt.user);
        let border_color = match is_selected {
            true => Color::red(),
            false => Color::black(),
        };

        self.icon
            .border_color(border_color)
            .border_width(.04h)
            .border_radius(0.1m)
            .hover_cursor(Cursor::Pointer)

        self.add_child(self.icon)
        
        // TODO: display selected count
    }

    @OnClick {
        check evt.button == MouseButton::Left;

        let is_selected = self._is_selected(evt.user);
        let count = match is_selected {
            true => 0,
            false => 1,
        };

        evt.client.send_request(SelectItemRequest {
            item: self.item,
            count,
        });
    }

    @OnMouseDown {
        evt.will_be_focused = none;
    }

    @OnMakeTooltip {
        evt.emit([self.item]);
        
        evt.view = View
            // .background_color(Color::white())
            // .set_size(400, 400);
    }
}
