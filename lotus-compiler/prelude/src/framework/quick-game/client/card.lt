export view Card {
    _background: CardFragment = none,
    _selected: CardFragment = CardFragment

    get_background() -> CardFragment {
        self._background || self._selected
    }

    next_line() -> Self {
        if !self._background {
            self._background = self._selected;
            self._background.direction = Direction::TopToBottom;
        }

        self._selected = CardFragment;
        self._background.children.push(self._selected);
        self
    }

    force(force: float) -> Self {
        self._selected.force = force;
        self
    }

    aspect_ratio(aspect_ratio: float) -> Self {
        self._selected.aspect_ratio = aspect_ratio;
        self
    }

    _initHorizontalChildren() -> Self {
        if !self._background {
            self.next_line();
        }

        if self._selected.children.is_empty() {
            self._selected.children.push(CardFragment);
            self._selected.children.push(CardFragment);
        }

        self
    }

    left() -> Self {
        self._initHorizontalChildren();
        self._selected = self._selected.children[0];
        self
    }

    right() -> Self {
        self._initHorizontalChildren();
        self._selected = self._selected.children[1];
        self
    }

    horizontal_margin(horizontal_margin: DisplaySize) -> Self {
        self._selected.horizontal_margin = horizontal_margin;
        self
    }

    vertical_margin(vertical_margin: DisplaySize) -> Self {
        self._selected.vertical_margin = vertical_margin;
        self
    }
}