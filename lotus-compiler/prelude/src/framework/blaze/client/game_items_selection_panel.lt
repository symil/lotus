pub class GameItemSelectionPanel {
    @OnRender {
        let grids = evt.local_data.ui.game_item_grids;

        if !grids {
            grids = [];
            evt.local_data.ui.game_item_grids = grids;

            for [i, category] in evt.user.game_items {
                grids.push(Grid {
                    items: category.items.map((item, j) => GameItemSelectionIcon { category_index: i, item_index: j }),
                    item_aspect_ratio: 1,
                    background_color: Color::from_string_hash(category.name),
                    border_color: Color::black(),
                    border_radius: 10,
                    border_width: 2,
                    margin: .25h,
                    title: `${category.name} @sub{(pick one)}`,
                    title_size: 0.35h,
                    item_count_per_row: 3,
                    item_count_per_column: 3
                });
            }
        }

        let master_grid = Grid {
            items: grids,
            outer_margin: 20,
            inner_margin: 20,
            item_count_per_column: 1,
        };

        evt.view
            .render_child(master_grid);
    }
}