pub class GameItemSelectionPanel {
    @OnRender {
        let grids = evt.local_data.ui.game_item_grids;

        if !grids {
            grids = [];
            evt.local_data.ui.game_item_grids = grids;

            for category in evt.user.selected_game_items.keys() {
                grids.push(Grid {
                    items: [],
                    item_aspect_ratio: 1,
                    background_color: Color::from_hash(category.name.hash()),
                    margin: .25h,
                    title: `${category.name} @sub{(pick one)}`,
                    title_size: 0.4h,
                    item_count_per_row: 3,
                    item_count_per_column: 3
                });
            }
        }

        for [i, category] in evt.user.selected_game_items.keys() {
            grids[i].items = category.items.map(item => GameItemSelectionIcon { category, item });
        }

        let master_grid = Grid {
            items: grids,
            item_count_per_column: 1,
        };

        evt.view
            .background_color(Color::gray())
            .render_child(master_grid);
    }
}