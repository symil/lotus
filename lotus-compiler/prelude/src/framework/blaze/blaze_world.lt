export class BlazeWorld {
    _game_items: GameItemCategory[] = [],
    _name_to_user: Map<string, #USER_TYPE> = Map::new(),
    _matchmaking_queue: #USER_TYPE[] = [],
    _valid_game_items: Map<Object, GameItemCategory> = Map::new(),

    set_game_items(game_items: GameItemCategory[]) {
        self._game_items = game_items.clone();
    }

    @OnWorldOpen {
        for category in self._game_items {
            for item in category.items {
                self._valid_game_items.set(item, category);
            }
        }
    }

    @OnWorldUpdate {
        while self._matchmaking_queue.len() >= 2 {
            let users = [self._matchmaking_queue.shift(), self._matchmaking_queue.shift()];
            let matchmaking_event = OnTriggerMatchmaking { ..evt, users };

            for user in users {
                user.is_searching_for_game = false;
            }

            matchmaking_event.emit([self]);
        }
    }

    @OnUserConnect {
        for category in self._game_items {
            evt.user.selected_game_items.set(category, []);
        }

        evt.user.is_connected = true;
    }

    @OnUserDisconnect {
        evt.user.is_connected = false;
    }

    @OnUserRequest {
        evt.emit([evt.request])
    }

    add_to_matchmaking(user: #USER_TYPE) {
        user.is_searching_for_game = true;
        self._matchmaking_queue.push_unique(user);
    }

    remove_from_matchmaking(user: #USER_TYPE) {
        user.is_searching_for_game = false;
        self._matchmaking_queue.remove(user);
    }
}