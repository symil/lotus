const BUFFER_SIZE = 4.pow(10);
const CLIENT : Client = none;

const VIRTUAL_WIDTH = 1600f;
const VIRTUAL_HEIGHT = 900f;

export class Client {
    buffer: SimpleBuffer,
    real_width: float,
    real_height: float,
    virtual_width: float,
    virtual_height: float,
    virtual_to_real_ratio: float,
    cursor_x: float,
    cursor_y: float,

    static new() -> Self {
        Self {
            buffer: SimpleBuffer::new(BUFFER_SIZE),
            virtual_width: VIRTUAL_WIDTH,
            virtual_height: VIRTUAL_HEIGHT
        }
    }

    _update() {
        self.buffer.reset_index();

        let written_count = wasm_poll_events(self.buffer.pointer, self.buffer.size);

        while self.buffer.index < written_count {
            let window_event = decode_window_event_from_buffer(self.buffer);
        }

        self.real_width = wasm_get_window_width();
        self.real_height = wasm_get_window_height();
        self.virtual_to_real_ratio = self.real_width / self.virtual_width;

        let primitive = DrawPrimitive {
            x: 500,
            y: 300,
            width: 200,
            height: 100,
            background_color: ORANGE
        };

        self.buffer.reset_index();
        self.buffer.write(Cursor::Pointer);
        primitive.write_to_buffer(self.buffer);

        wasm_draw_frame(self.buffer.pointer, self.buffer.index);
    }

    send_request(request: Object) {

    }
}

sys fn start_client() {
    @log("CLIENT START");
    wasm_init_window(VIRTUAL_WIDTH / VIRTUAL_HEIGHT);
    CLIENT = Client::new();
}

sys fn update_client() {
    CLIENT._update();
    // @log(`memory used: ${get_memory_usage() / 1024} KB`);
    @retain(CLIENT);
    @trigger_garbage_collection();
}

fn wasm_init_window(float) {{
    (call $init_window)
}}

fn wasm_get_current_time() -> int {{
    (call $get_current_time)
}}

fn wasm_poll_events(ptr, int) -> int {{
    (call $poll_events)
}}

fn wasm_get_window_width() -> float {{
    (call $get_window_width)
}}

fn wasm_get_window_height() -> float {{
    (call $get_window_height)
}}

fn wasm_draw_frame(ptr, int) {{
    (call $draw_frame)
}}

fn wasm_clear_renderer_cache() {{
    (call $clear_renderer_cache)
}}