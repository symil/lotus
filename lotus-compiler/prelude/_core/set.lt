export class Set<V> {
    _map: Map<V, int>,

    static default() -> This {
        This::new()
    }

    static new() -> This {
        This {
            _map: Map<V, int>::new()
        }
    }

    capacity() -> int {
        this._map.capacity()
    }

    size() -> int {
        this._map.size()
    }

    values() -> V[] {
        this._map.keys()
    }

    add(value: V) -> bool {
        !this._map.set(value, 0)
    }

    delete(value: V) -> bool {
        !!this._map.delete(value)
    }

    clear() {
        this._map.clear()
    }

    has(value: V) -> bool {
        !!this._map.get(value)
    }
}