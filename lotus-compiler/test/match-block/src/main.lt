enum Test {
    Foo,
    Bar,
    Baz
}

export fn main() {
    for value in [Test::Foo, Test::Bar, Test::Baz, Test::none] {
        @dbg(match value {
            Test::Foo => 4,
            Test::Bar => 8,
            none => 12
        });
    }

    @log("---");

    for value in [produce_bool(true), produce_bool(false)] {
        @dbg(match value {
            false => "no",
            true => "yes"
        });
    }

    @log("---");

    for n in [1, 2, 3] {
        @dbg(match n {
            0 => "zero",
            1 => "one",
            _ => "other"
        })
    }

    @log("---");

    for s in ["hello", "world", "!", none] {
        @dbg(match s {
            "world" => "world",
            "hello" => "hello",
            none => "none",
            _ => "?"
        })
    }

    @log("---");

    for c in "abcd" {
        @dbg(match c {
            'a' => 'a'
        });
    }
}

fn produce_bool(value: bool) -> bool {
    @log(value);
    value
}