// A variable ending with "_byte_size" indicates a number of bytes
// A variable ending with just "_size" indicates a number in 32 bits values (i.e 4 times less that if it was expressed in bytes)

pub const MEMORY_CELL_BYTE_SIZE = 4; // We work with 32 bits memory cells (4 bytes)
pub const WASM_PAGE_BYTE_SIZE = 2.pow(16); // A WebAssembly page allocated by the browser is always 64 KiB

pub const WASM_PAGE_SIZE = WASM_PAGE_BYTE_SIZE / MEMORY_CELL_BYTE_SIZE;
pub const NULL_ZONE_SIZE = 128; // We reserve a 128 cells zone of nothing in case we write to a "null" pointer (not ideal but ok for now I guess)
pub const VIRTUAL_PAGE_METADATA_SIZE = 5; // Virtual pages are managed by the memoy manager and are completely decorelated from the wasm pages
pub const MAX_VERY_SMALL_BLOCK_SIZE = 2;
pub const MAX_SMALL_BLOCK_SIZE = 4096;
pub const MAX_BLOCK_SIZE = 2.pow(28); // Cannot allocate more than 1 GiB at a time
pub const MEMORY_METADATA_SIZE = 32;
pub const MEMORY_METADATA_START_ADDR = NULL_ZONE_SIZE;
pub const MEMORY_DATA_START_ADDR = MEMORY_METADATA_START_ADDR + MEMORY_METADATA_SIZE;
pub const VERY_SMALL_BLOCK_COUNT_PER_PAGE = 2048;
pub const APPROXIMATE_SMALL_BLOCK_PAGE_SIZE = 2.pow(14);